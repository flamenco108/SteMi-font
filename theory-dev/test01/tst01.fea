languagesystem DFLT dflt;


# Anchors anchory kotwice
include(tst01-anchors.fea) #lookup cursanchory
include(tst01-circ.fea) #lookup marcirc

feature curs {
 script DFLT;
     language dflt ;
     lookup cursanchory;
} curs;

feature abvm {

 script DFLT;
     language dflt ;
      lookup markcirc;
} abvm;


#Mark attachment classes (defined in GDEF, used in lookupflags)

@GDEF_Simple = [\.null \uni000A \space \quoteright \quotesinglbase \quotedblright 
	\quotedblbase \uni2029 \malaspacja \stemK \gorP.brzh \stemI.krt \stemKRT 
	\gorBbrzh \stemK.krt \stemG \gorST.brzh \luD1 \luD2 \gorPS.brzh \luT1 \luT2 \luKL 
	\luSJ \dolCZbrzh \dolSZ.brzh \dolDRZ.brzh \poczPUA \stemG.krt \stemI \uniD00F 
	\luUs \koloS \koloZ \eprost3 \eprost4 \luD3 \luD4 \luT3 \luT4 \okroci \prostaVOW 
	\prostaCONS \konCONS \endash \konVOW \eprost2 \dolMv.brzhd \luGL \dolTW \dolMK30 
	\dolTWe \dolMKE \luU0 \luU2 \luNdol \dolLUK \eprost0 \eprost1 \eprost5 \eprost6 
	\gorMKE \koloL \gorZD.brzhd \dolDv.brzhd \luU1 \luU3 \luU4 \luU5 \luUa0 \luUa1 
	\luUa2 \luUa3 \luUa4 \luKLY \dolMK45 \dolTW.alt \gorMK45 \okredzi \okrodzi 
	\okreci \luNgor \luNOdol \luONgor \OstrI \gorLUK \gorOMluk \dolMOluk \k \g \i \e \u 
	\s \z \l \p \b \c \m \n \o \g_l \c_i \ij \S 
    #\circumflex 
    \A \B \C \D \E \F \G \H \I \J \K \L \M \N \O 
	\P \Q \R \T \U \V \W \X \Y \Z \n.TW \n.TWe \gorTWe \a \spac.v50.h0 \spac.v80.h0 
	\spac.v160.h0 \spac.v400.h900 ];
@GDEF_Mark = [\circumflex ];

table GDEF {
  GlyphClassDef @GDEF_Simple, , @GDEF_Mark, ;

} GDEF;

# GSUB

@space = [ \space ];
@x_n = [ k g l m n p b s z ];
@male = [ k g i u s z l p b m n ];
@WIELKIE = [ K G I U S Z L P B M N ];
@spolgloski = [ k g l m n p b s z ];
@au = [ a u ];
@stemowe = [ k g m p b ];

lookup smalcps { 
#    sub K lookup markcirc;
    sub G by circumflex g;
    sub s by circumflex s;
    sub Z by circumflex z;
    sub L by circumflex l;
    sub P by circumflex p;
    sub B by circumflex b;
    sub M by circumflex m;
    sub N by circumflex n;
} smalcps;
feature ccmp { 
  script DFLT;
     language dflt ;
    lookup smalcps; } ccmp;

lookup space50 { sub n by \spac.v50.h0 n; } space50;
lookup space80 { sub n by \spac.v80.h0 n; } space80;
lookup space160 { sub n by \spac.v160.h0 n; } space160;
lookup space400 { sub space by \spac.v400.h900; } space400;

lookup N { sub n by luNgor luNdol;} N;
lookup Nnull {sub n by NULL;} Nnull;
lookup Onull {sub o by NULL;} Onull;
# ON
lookup nX {sub n by luNdol;} nX;
lookup On {sub o by luONgor; } On;
# ONO
lookup ON {sub o n by luONgor;} ON;
lookup NO {sub luONgor o' by luNOdol;} NO;
# NO
lookup Xn {sub n by luNgor;} Xn;
lookup nO {sub o by luNOdol;} nO;
#
lookup Ne {sub n by luNgor dolTWe;} Ne;
lookup nE {sub n by dolTWe;} nE;
lookup En {sub n by gorTWe luNdol;} En;
lookup enX {sub n by gorTWe; } enX;
lookup EnE {sub n by gorTWe dolTWe;} EnE;

lookup spaceHI {
    #sub \space n' lookup space160 k;
    sub \space n' lookup space80 g;
    sub \space' lookup space400 n k;
} spaceHI;

lookup CVnVC {

    # on_litery
    sub o' lookup On n' lookup nX [ @spolgloski a u ];
    # on_space
    sub o' lookup On n' lookup Nnull @space;
    # no
    sub [ @space @spolgloski a u luNOdol ] n' lookup Xn o' lookup nO;
    # ONO
    sub o' lookup ON n' lookup NO o';
    # eno
    sub e n' lookup enX o' lookup nO;
    # Xno
    sub [ a u @spolgloski @space] n' lookup Xn o' lookup nO;
    # ne
    sub n' lookup Ne e;
    # Xne
    sub [ a u @spolgloski @space] n' lookup Ne e;
    # one
    sub o' lookup On n' lookup nE e;
    # ene
    sub e n' lookup EnE e;
    # en
    sub e n' lookup En;
    

} CVnVC;

# stemy plus twarde samogoski
lookup ccmp-dolTW { 
    sub k by k dolTW;
    sub g by g dolTW;
    sub m by m dolTW;
    sub p by p dolTW;
    sub b by b dolTW;
    sub stemG by stemG dolTW;
} ccmp-dolTW;

lookup ccmp-dolTWe {
    sub k by k dolTWe;
    sub g by g dolTWe;
    sub m by m dolTWe;
    sub p by p dolTWe;
    sub b by b dolTWe;
    sub stemG by stemG dolTWe;
} ccmp-dolTWe;

lookup ccmp-gorTWe {
    sub m by gorTWe stemG;
} ccmp-gorTWe;

lookup stemV { 
    sub @stemowe' lookup ccmp-dolTW [@au o]; 
    sub @stemowe' lookup ccmp-dolTWe e;
    sub e m' lookup ccmp-gorTWe;
} stemV;

lookup nasc { sub n' by \spac.v160.h0 n; } nasc;
lookup poczw {
ignore sub @GDEF_Simple n'; # If I ignore when there *are* glyphs before me,
#sub n' by \spac.v160.h0 n;  # then there are *no* glyphs before me.
sub n' lookup nasc k;
} poczw;

feature calt { 
  script DFLT;
   language dflt ;
    lookup CVnVC;
    lookup stemV;
    lookup spaceHI;
    lookup poczw;
    } calt;

#feature init {
#  script DFLT;
#   language dflt ;
#    lookup poczw;
#} init;
